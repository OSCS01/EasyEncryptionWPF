//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace EasyEncryption.EasyEncWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MainServiceSoap", Namespace="http://tempuri.org/")]
    public partial class MainService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getPubkeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginValidationOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback addGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback displayGrpMemOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLogsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback displayGroupMemOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveGroupMemOperationCompleted;
        
        private System.Threading.SendOrPostCallback displayContactsOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveContactsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addGroupMemOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkGrpMemOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkGrpOwnerOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGrpOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getIsDownloadedOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MainService() {
            this.Url = global::EasyEncryption.Properties.Settings.Default.EasyEncryption_EasyEncWS_MainService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getPubkeyCompletedEventHandler getPubkeyCompleted;
        
        /// <remarks/>
        public event DownloadCompletedEventHandler DownloadCompleted;
        
        /// <remarks/>
        public event loginValidationCompletedEventHandler loginValidationCompleted;
        
        /// <remarks/>
        public event checkGroupCompletedEventHandler checkGroupCompleted;
        
        /// <remarks/>
        public event addGroupCompletedEventHandler addGroupCompleted;
        
        /// <remarks/>
        public event displayGrpMemCompletedEventHandler displayGrpMemCompleted;
        
        /// <remarks/>
        public event getLogsCompletedEventHandler getLogsCompleted;
        
        /// <remarks/>
        public event getGroupsCompletedEventHandler getGroupsCompleted;
        
        /// <remarks/>
        public event displayGroupMemCompletedEventHandler displayGroupMemCompleted;
        
        /// <remarks/>
        public event retrieveGroupMemCompletedEventHandler retrieveGroupMemCompleted;
        
        /// <remarks/>
        public event displayContactsCompletedEventHandler displayContactsCompleted;
        
        /// <remarks/>
        public event retrieveContactsCompletedEventHandler retrieveContactsCompleted;
        
        /// <remarks/>
        public event addGroupMemCompletedEventHandler addGroupMemCompleted;
        
        /// <remarks/>
        public event checkGrpMemCompletedEventHandler checkGrpMemCompleted;
        
        /// <remarks/>
        public event checkGrpOwnerCompletedEventHandler checkGrpOwnerCompleted;
        
        /// <remarks/>
        public event DeleteGrpCompletedEventHandler DeleteGrpCompleted;
        
        /// <remarks/>
        public event DeleteFileCompletedEventHandler DeleteFileCompleted;
        
        /// <remarks/>
        public event retrieveCompletedEventHandler retrieveCompleted;
        
        /// <remarks/>
        public event uploadFilesCompletedEventHandler uploadFilesCompleted;
        
        /// <remarks/>
        public event retrieveNotificationCompletedEventHandler retrieveNotificationCompleted;
        
        /// <remarks/>
        public event getIsDownloadedCompletedEventHandler getIsDownloadedCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPubkey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getPubkey() {
            object[] results = this.Invoke("getPubkey", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPubkeyAsync() {
            this.getPubkeyAsync(null);
        }
        
        /// <remarks/>
        public void getPubkeyAsync(object userState) {
            if ((this.getPubkeyOperationCompleted == null)) {
                this.getPubkeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPubkeyOperationCompleted);
            }
            this.InvokeAsync("getPubkey", new object[0], this.getPubkeyOperationCompleted, userState);
        }
        
        private void OngetPubkeyOperationCompleted(object arg) {
            if ((this.getPubkeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPubkeyCompleted(this, new getPubkeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Download", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Download(string user, string filename, string share, string owner) {
            object[] results = this.Invoke("Download", new object[] {
                        user,
                        filename,
                        share,
                        owner});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void DownloadAsync(string user, string filename, string share, string owner) {
            this.DownloadAsync(user, filename, share, owner, null);
        }
        
        /// <remarks/>
        public void DownloadAsync(string user, string filename, string share, string owner, object userState) {
            if ((this.DownloadOperationCompleted == null)) {
                this.DownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadOperationCompleted);
            }
            this.InvokeAsync("Download", new object[] {
                        user,
                        filename,
                        share,
                        owner}, this.DownloadOperationCompleted, userState);
        }
        
        private void OnDownloadOperationCompleted(object arg) {
            if ((this.DownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadCompleted(this, new DownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/loginValidation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool loginValidation(string username, string password) {
            object[] results = this.Invoke("loginValidation", new object[] {
                        username,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void loginValidationAsync(string username, string password) {
            this.loginValidationAsync(username, password, null);
        }
        
        /// <remarks/>
        public void loginValidationAsync(string username, string password, object userState) {
            if ((this.loginValidationOperationCompleted == null)) {
                this.loginValidationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginValidationOperationCompleted);
            }
            this.InvokeAsync("loginValidation", new object[] {
                        username,
                        password}, this.loginValidationOperationCompleted, userState);
        }
        
        private void OnloginValidationOperationCompleted(object arg) {
            if ((this.loginValidationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginValidationCompleted(this, new loginValidationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkGroup(string newGroup) {
            object[] results = this.Invoke("checkGroup", new object[] {
                        newGroup});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkGroupAsync(string newGroup) {
            this.checkGroupAsync(newGroup, null);
        }
        
        /// <remarks/>
        public void checkGroupAsync(string newGroup, object userState) {
            if ((this.checkGroupOperationCompleted == null)) {
                this.checkGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckGroupOperationCompleted);
            }
            this.InvokeAsync("checkGroup", new object[] {
                        newGroup}, this.checkGroupOperationCompleted, userState);
        }
        
        private void OncheckGroupOperationCompleted(object arg) {
            if ((this.checkGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkGroupCompleted(this, new checkGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addGroup(string username, string GroupName) {
            this.Invoke("addGroup", new object[] {
                        username,
                        GroupName});
        }
        
        /// <remarks/>
        public void addGroupAsync(string username, string GroupName) {
            this.addGroupAsync(username, GroupName, null);
        }
        
        /// <remarks/>
        public void addGroupAsync(string username, string GroupName, object userState) {
            if ((this.addGroupOperationCompleted == null)) {
                this.addGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddGroupOperationCompleted);
            }
            this.InvokeAsync("addGroup", new object[] {
                        username,
                        GroupName}, this.addGroupOperationCompleted, userState);
        }
        
        private void OnaddGroupOperationCompleted(object arg) {
            if ((this.addGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/displayGrpMem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] displayGrpMem(string GroupName) {
            object[] results = this.Invoke("displayGrpMem", new object[] {
                        GroupName});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void displayGrpMemAsync(string GroupName) {
            this.displayGrpMemAsync(GroupName, null);
        }
        
        /// <remarks/>
        public void displayGrpMemAsync(string GroupName, object userState) {
            if ((this.displayGrpMemOperationCompleted == null)) {
                this.displayGrpMemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndisplayGrpMemOperationCompleted);
            }
            this.InvokeAsync("displayGrpMem", new object[] {
                        GroupName}, this.displayGrpMemOperationCompleted, userState);
        }
        
        private void OndisplayGrpMemOperationCompleted(object arg) {
            if ((this.displayGrpMemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.displayGrpMemCompleted(this, new displayGrpMemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getLogs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getLogs(string name, string owner, string group) {
            object[] results = this.Invoke("getLogs", new object[] {
                        name,
                        owner,
                        group});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getLogsAsync(string name, string owner, string group) {
            this.getLogsAsync(name, owner, group, null);
        }
        
        /// <remarks/>
        public void getLogsAsync(string name, string owner, string group, object userState) {
            if ((this.getLogsOperationCompleted == null)) {
                this.getLogsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLogsOperationCompleted);
            }
            this.InvokeAsync("getLogs", new object[] {
                        name,
                        owner,
                        group}, this.getLogsOperationCompleted, userState);
        }
        
        private void OngetLogsOperationCompleted(object arg) {
            if ((this.getLogsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLogsCompleted(this, new getLogsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getGroups", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getGroups(string username) {
            object[] results = this.Invoke("getGroups", new object[] {
                        username});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getGroupsAsync(string username) {
            this.getGroupsAsync(username, null);
        }
        
        /// <remarks/>
        public void getGroupsAsync(string username, object userState) {
            if ((this.getGroupsOperationCompleted == null)) {
                this.getGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGroupsOperationCompleted);
            }
            this.InvokeAsync("getGroups", new object[] {
                        username}, this.getGroupsOperationCompleted, userState);
        }
        
        private void OngetGroupsOperationCompleted(object arg) {
            if ((this.getGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGroupsCompleted(this, new getGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/displayGroupMem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable displayGroupMem(string GroupName) {
            object[] results = this.Invoke("displayGroupMem", new object[] {
                        GroupName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void displayGroupMemAsync(string GroupName) {
            this.displayGroupMemAsync(GroupName, null);
        }
        
        /// <remarks/>
        public void displayGroupMemAsync(string GroupName, object userState) {
            if ((this.displayGroupMemOperationCompleted == null)) {
                this.displayGroupMemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndisplayGroupMemOperationCompleted);
            }
            this.InvokeAsync("displayGroupMem", new object[] {
                        GroupName}, this.displayGroupMemOperationCompleted, userState);
        }
        
        private void OndisplayGroupMemOperationCompleted(object arg) {
            if ((this.displayGroupMemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.displayGroupMemCompleted(this, new displayGroupMemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/retrieveGroupMem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string retrieveGroupMem(string GroupName) {
            object[] results = this.Invoke("retrieveGroupMem", new object[] {
                        GroupName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void retrieveGroupMemAsync(string GroupName) {
            this.retrieveGroupMemAsync(GroupName, null);
        }
        
        /// <remarks/>
        public void retrieveGroupMemAsync(string GroupName, object userState) {
            if ((this.retrieveGroupMemOperationCompleted == null)) {
                this.retrieveGroupMemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveGroupMemOperationCompleted);
            }
            this.InvokeAsync("retrieveGroupMem", new object[] {
                        GroupName}, this.retrieveGroupMemOperationCompleted, userState);
        }
        
        private void OnretrieveGroupMemOperationCompleted(object arg) {
            if ((this.retrieveGroupMemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveGroupMemCompleted(this, new retrieveGroupMemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/displayContacts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable displayContacts() {
            object[] results = this.Invoke("displayContacts", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void displayContactsAsync() {
            this.displayContactsAsync(null);
        }
        
        /// <remarks/>
        public void displayContactsAsync(object userState) {
            if ((this.displayContactsOperationCompleted == null)) {
                this.displayContactsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndisplayContactsOperationCompleted);
            }
            this.InvokeAsync("displayContacts", new object[0], this.displayContactsOperationCompleted, userState);
        }
        
        private void OndisplayContactsOperationCompleted(object arg) {
            if ((this.displayContactsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.displayContactsCompleted(this, new displayContactsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/retrieveContacts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string retrieveContacts() {
            object[] results = this.Invoke("retrieveContacts", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void retrieveContactsAsync() {
            this.retrieveContactsAsync(null);
        }
        
        /// <remarks/>
        public void retrieveContactsAsync(object userState) {
            if ((this.retrieveContactsOperationCompleted == null)) {
                this.retrieveContactsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveContactsOperationCompleted);
            }
            this.InvokeAsync("retrieveContacts", new object[0], this.retrieveContactsOperationCompleted, userState);
        }
        
        private void OnretrieveContactsOperationCompleted(object arg) {
            if ((this.retrieveContactsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveContactsCompleted(this, new retrieveContactsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addGroupMem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addGroupMem(string group, string name) {
            this.Invoke("addGroupMem", new object[] {
                        group,
                        name});
        }
        
        /// <remarks/>
        public void addGroupMemAsync(string group, string name) {
            this.addGroupMemAsync(group, name, null);
        }
        
        /// <remarks/>
        public void addGroupMemAsync(string group, string name, object userState) {
            if ((this.addGroupMemOperationCompleted == null)) {
                this.addGroupMemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddGroupMemOperationCompleted);
            }
            this.InvokeAsync("addGroupMem", new object[] {
                        group,
                        name}, this.addGroupMemOperationCompleted, userState);
        }
        
        private void OnaddGroupMemOperationCompleted(object arg) {
            if ((this.addGroupMemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addGroupMemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkGrpMem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkGrpMem(string GroupName, string name) {
            object[] results = this.Invoke("checkGrpMem", new object[] {
                        GroupName,
                        name});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkGrpMemAsync(string GroupName, string name) {
            this.checkGrpMemAsync(GroupName, name, null);
        }
        
        /// <remarks/>
        public void checkGrpMemAsync(string GroupName, string name, object userState) {
            if ((this.checkGrpMemOperationCompleted == null)) {
                this.checkGrpMemOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckGrpMemOperationCompleted);
            }
            this.InvokeAsync("checkGrpMem", new object[] {
                        GroupName,
                        name}, this.checkGrpMemOperationCompleted, userState);
        }
        
        private void OncheckGrpMemOperationCompleted(object arg) {
            if ((this.checkGrpMemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkGrpMemCompleted(this, new checkGrpMemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkGrpOwner", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string checkGrpOwner(string GroupName) {
            object[] results = this.Invoke("checkGrpOwner", new object[] {
                        GroupName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void checkGrpOwnerAsync(string GroupName) {
            this.checkGrpOwnerAsync(GroupName, null);
        }
        
        /// <remarks/>
        public void checkGrpOwnerAsync(string GroupName, object userState) {
            if ((this.checkGrpOwnerOperationCompleted == null)) {
                this.checkGrpOwnerOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckGrpOwnerOperationCompleted);
            }
            this.InvokeAsync("checkGrpOwner", new object[] {
                        GroupName}, this.checkGrpOwnerOperationCompleted, userState);
        }
        
        private void OncheckGrpOwnerOperationCompleted(object arg) {
            if ((this.checkGrpOwnerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkGrpOwnerCompleted(this, new checkGrpOwnerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteGrp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteGrp(string group) {
            this.Invoke("DeleteGrp", new object[] {
                        group});
        }
        
        /// <remarks/>
        public void DeleteGrpAsync(string group) {
            this.DeleteGrpAsync(group, null);
        }
        
        /// <remarks/>
        public void DeleteGrpAsync(string group, object userState) {
            if ((this.DeleteGrpOperationCompleted == null)) {
                this.DeleteGrpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGrpOperationCompleted);
            }
            this.InvokeAsync("DeleteGrp", new object[] {
                        group}, this.DeleteGrpOperationCompleted, userState);
        }
        
        private void OnDeleteGrpOperationCompleted(object arg) {
            if ((this.DeleteGrpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGrpCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFile(string name, string owner, string group, string user) {
            this.Invoke("DeleteFile", new object[] {
                        name,
                        owner,
                        group,
                        user});
        }
        
        /// <remarks/>
        public void DeleteFileAsync(string name, string owner, string group, string user) {
            this.DeleteFileAsync(name, owner, group, user, null);
        }
        
        /// <remarks/>
        public void DeleteFileAsync(string name, string owner, string group, string user, object userState) {
            if ((this.DeleteFileOperationCompleted == null)) {
                this.DeleteFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFileOperationCompleted);
            }
            this.InvokeAsync("DeleteFile", new object[] {
                        name,
                        owner,
                        group,
                        user}, this.DeleteFileOperationCompleted, userState);
        }
        
        private void OnDeleteFileOperationCompleted(object arg) {
            if ((this.DeleteFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/retrieve", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string retrieve(string user) {
            object[] results = this.Invoke("retrieve", new object[] {
                        user});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void retrieveAsync(string user) {
            this.retrieveAsync(user, null);
        }
        
        /// <remarks/>
        public void retrieveAsync(string user, object userState) {
            if ((this.retrieveOperationCompleted == null)) {
                this.retrieveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveOperationCompleted);
            }
            this.InvokeAsync("retrieve", new object[] {
                        user}, this.retrieveOperationCompleted, userState);
        }
        
        private void OnretrieveOperationCompleted(object arg) {
            if ((this.retrieveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveCompleted(this, new retrieveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/uploadFiles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool uploadFiles(long size, string group, string owner, string originalfilename, string originalfileext, string encryptedkey, string IV, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileData) {
            object[] results = this.Invoke("uploadFiles", new object[] {
                        size,
                        group,
                        owner,
                        originalfilename,
                        originalfileext,
                        encryptedkey,
                        IV,
                        fileData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void uploadFilesAsync(long size, string group, string owner, string originalfilename, string originalfileext, string encryptedkey, string IV, byte[] fileData) {
            this.uploadFilesAsync(size, group, owner, originalfilename, originalfileext, encryptedkey, IV, fileData, null);
        }
        
        /// <remarks/>
        public void uploadFilesAsync(long size, string group, string owner, string originalfilename, string originalfileext, string encryptedkey, string IV, byte[] fileData, object userState) {
            if ((this.uploadFilesOperationCompleted == null)) {
                this.uploadFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadFilesOperationCompleted);
            }
            this.InvokeAsync("uploadFiles", new object[] {
                        size,
                        group,
                        owner,
                        originalfilename,
                        originalfileext,
                        encryptedkey,
                        IV,
                        fileData}, this.uploadFilesOperationCompleted, userState);
        }
        
        private void OnuploadFilesOperationCompleted(object arg) {
            if ((this.uploadFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadFilesCompleted(this, new uploadFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/retrieveNotification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int retrieveNotification(string username) {
            object[] results = this.Invoke("retrieveNotification", new object[] {
                        username});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void retrieveNotificationAsync(string username) {
            this.retrieveNotificationAsync(username, null);
        }
        
        /// <remarks/>
        public void retrieveNotificationAsync(string username, object userState) {
            if ((this.retrieveNotificationOperationCompleted == null)) {
                this.retrieveNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveNotificationOperationCompleted);
            }
            this.InvokeAsync("retrieveNotification", new object[] {
                        username}, this.retrieveNotificationOperationCompleted, userState);
        }
        
        private void OnretrieveNotificationOperationCompleted(object arg) {
            if ((this.retrieveNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveNotificationCompleted(this, new retrieveNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getIsDownloaded", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getIsDownloaded(string filename, string username, string group) {
            object[] results = this.Invoke("getIsDownloaded", new object[] {
                        filename,
                        username,
                        group});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getIsDownloadedAsync(string filename, string username, string group) {
            this.getIsDownloadedAsync(filename, username, group, null);
        }
        
        /// <remarks/>
        public void getIsDownloadedAsync(string filename, string username, string group, object userState) {
            if ((this.getIsDownloadedOperationCompleted == null)) {
                this.getIsDownloadedOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIsDownloadedOperationCompleted);
            }
            this.InvokeAsync("getIsDownloaded", new object[] {
                        filename,
                        username,
                        group}, this.getIsDownloadedOperationCompleted, userState);
        }
        
        private void OngetIsDownloadedOperationCompleted(object arg) {
            if ((this.getIsDownloadedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getIsDownloadedCompleted(this, new getIsDownloadedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void getPubkeyCompletedEventHandler(object sender, getPubkeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPubkeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPubkeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void DownloadCompletedEventHandler(object sender, DownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void loginValidationCompletedEventHandler(object sender, loginValidationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginValidationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginValidationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void checkGroupCompletedEventHandler(object sender, checkGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void addGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void displayGrpMemCompletedEventHandler(object sender, displayGrpMemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class displayGrpMemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal displayGrpMemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void getLogsCompletedEventHandler(object sender, getLogsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLogsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLogsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void getGroupsCompletedEventHandler(object sender, getGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void displayGroupMemCompletedEventHandler(object sender, displayGroupMemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class displayGroupMemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal displayGroupMemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void retrieveGroupMemCompletedEventHandler(object sender, retrieveGroupMemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retrieveGroupMemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retrieveGroupMemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void displayContactsCompletedEventHandler(object sender, displayContactsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class displayContactsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal displayContactsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void retrieveContactsCompletedEventHandler(object sender, retrieveContactsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retrieveContactsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retrieveContactsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void addGroupMemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void checkGrpMemCompletedEventHandler(object sender, checkGrpMemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkGrpMemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkGrpMemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void checkGrpOwnerCompletedEventHandler(object sender, checkGrpOwnerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkGrpOwnerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkGrpOwnerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void DeleteGrpCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void DeleteFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void retrieveCompletedEventHandler(object sender, retrieveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retrieveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retrieveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void uploadFilesCompletedEventHandler(object sender, uploadFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uploadFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void retrieveNotificationCompletedEventHandler(object sender, retrieveNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retrieveNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retrieveNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void getIsDownloadedCompletedEventHandler(object sender, getIsDownloadedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getIsDownloadedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getIsDownloadedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591